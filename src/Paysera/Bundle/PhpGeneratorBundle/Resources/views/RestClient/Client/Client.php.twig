{%- import _self as macros %}
{%- macro render_methods(resource, api) -%}
    {%- for subResource in resource.resources -%}
        {{ _self.render_methods(subResource, api) }}
    {%- endfor %}
    {%- for method in resource.methods -%}
        {%- include '@PayseraPhpGenerator/RestClient/Client/Method/api_method.php.twig' with {
            'resource': resource,
            'method': method,
            'api': api
        } only -%}
    {%- endfor -%}
{% endmacro %}
<?php

namespace {{ api.namespace }};

use {{ api.namespace }}\Entity as Entities;
use Fig\Http\Message\RequestMethodInterface;
use Paysera\Component\RestClientCommon\Client\ApiClient;
{% for typeConfig in get_directly_used_types(api) %}
{% if typeConfig.importString is not null %}
use {{ typeConfig.importString|raw }};
{% endif %}
{% endfor %}

class {{ api.name|to_class_name }}
{
    private $apiClient;

    public function __construct(ApiClient $apiClient)
    {
        $this->apiClient = $apiClient;
    }

    public function withOptions(array $options)
    {
        return new {{ api.name|to_class_name }}($this->apiClient->withOptions($options));
    }

{% for resource in api.ramlDefinition.resources -%}
    {{- macros.render_methods(resource, api) -}}
{% endfor %}
}
