import angular from 'angular';
import { TokenProvider, Scope } from 'paysera-http-client-common';

{% for type in api.types %}
import {{ type.name }} from './entity/{{ type.name }}';
{% endfor %}

import DateFactory from './service/DateFactory';
import ClientFactory from './service/ClientFactory';
import {{ js_get_client_name(api.name) }} from './service/{{ js_get_client_name(api.name) }}';

export {
{% for type in api.types %}
    {{ type.name }},
{% endfor %}
    DateFactory,
    ClientFactory,
    {{ js_get_client_name(api.name) }},
};

class AngularClientFactory {

    /**
     * @param {object|null} config
     * @returns {{ ('{' ~ js_get_client_name(api.name) ~ '}')|raw }}
     */
    getClient(config) {
        const factoryConfig = {};
        let tokenProvider = null;

        if (config && config.scope && config.initialTokenProvider) {
            tokenProvider = new TokenProvider(
                new Scope(config.scope),
                config.initialTokenProvider,
            );
        }

        if (config && config.baseUrl) {
            factoryConfig.baseUrl = config.baseUrl;
        }

        if (config && config.refreshTokenProvider) {
            factoryConfig.refreshTokenProvider = config.refreshTokenProvider;
        }

        return ClientFactory.create(factoryConfig).get{{ js_get_client_name(api.name) }}(tokenProvider);
    }
}

export default angular
    .module('{{ js_get_angular_module_name(vendor_prefix, api.name) }}', [])
    .service('{{ js_get_angular_client_factory_name(vendor_prefix, api.name) }}', AngularClientFactory)
    .name
;
